/*
 * stm32f446xx_usart_driver.h
 *
 *  Created on: 08-Apr-2021
 *      Author: DELL
 */

#ifndef INC_STM32F446XX_USART_DRIVER_H_
#define INC_STM32F446XX_USART_DRIVER_H_


/*
 * USART Config Structure
 */
typedef struct
{
	uint8_t USART_Mode;
	uint32_t USART_Baud;
	uint8_t USART_NoOfStopBits;
	uint8_t USART_WordLength;
	uint8_t USART_ParityControl;
	uint8_t USART_HWFlowControl;

}USART_Config_t;

typedef struct
{
	USART_RegDef_t	*pUSARTx;
	USART_Config_t	USART_Config;
}USART_Handle_t;

/*
 * Status Flag Definitions
 */
#define USART_FLAG_PE								(1 << USART_SR_PE)
#define USART_FLAG_DE								(1 << USART_CR3_DE)
#define USART_FLAG_NF								(1 << USART_CR3_NF)
#define USART_FLAG_ORE								(1 << USART_CR3_ORE)
#define USART_FLAG_IDLE								(1 << USART_CR3_IDLE)
#define USART_FLAG_RXNE								(1 << USART_CR3_RXNE)
#define USART_FLAG_TC								(1 << USART_CR3_TC)
#define USART_FLAG_TXE								(1 << USART_CR3_TXE)
#define USART_FLAG_LBD								(1 << USART_CR3_LBD)
#define USART_FLAG_CTS								(1 << USART_CR3_CTS)

/************************************************************
 *					 Function prototypes
 ***********************************************************/

/*
 * Peripheral Clock Setup
 */
void USART_PeriClockControl(USART_RegDef_t *pUSARTx, uint8_t EnorDi);

/*
 * Peripheral Enable and Disable
 */
void USART_PeripheralControl(USART_RegDef_t *pUSARTx, uint8_t EnorDi);

/*
 * Flag status return
 */
uint8_t USART_GetFlagStatus(USART_RegDef_t *pUSARTx, uint8_t StausFlagName);



#endif /* INC_STM32F446XX_USART_DRIVER_H_ */
